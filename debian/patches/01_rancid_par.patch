Author: Roland Rosenfeld <roland@debian.org>
Description: Moves par(1) to rancid_par(1), compare #163074
Bugs-Debian: http://bugs.debian.org/163074

--- a/bin/control_rancid.in
+++ b/bin/control_rancid.in
@@ -126,7 +126,7 @@
     MAILHEADERS="Precedence: bulk\n"; export MAILHEADERS
 fi
 
-# Number of things par should run in parallel.
+# Number of things rancid_par should run in parallel.
 PAR_COUNT=${PAR_COUNT:-5}
 # Number of times failed collections should be retried.  Minimum 1.
 MAX_ROUNDS=${MAX_ROUNDS:-4}
@@ -374,7 +374,7 @@
 # tailored to the specific installation.
 echo ""
 echo "Trying to get all of the configs."
-par -q -n $PAR_COUNT -c "rancid-fe {}" $devlistfile
+rancid_par -q -n $PAR_COUNT -c "rancid-fe {}" $devlistfile
 
 # This section will generate a list of missed routers
 # and try to grab them again.  It will run through
@@ -404,7 +404,7 @@
     if [ -f $DIR/routers.up.missed ] ; then
 	echo "====================================="
 	echo "Getting missed routers: round $round."
-	par -q -n $PAR_COUNT -c "rancid-fe \{}" $DIR/routers.up.missed
+	rancid_par -q -n $PAR_COUNT -c "rancid-fe \{}" $DIR/routers.up.missed
 	rm -f $DIR/routers.up.missed
 	round=`expr $round + 1`
     else
--- a/bin/par.in
+++ b/bin/par.in
@@ -40,9 +40,9 @@
 ## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 ## POSSIBILITY OF SUCH DAMAGE.
 #
-# PAR - parallel processing of command
+# RANCID_PAR - parallel processing of command
 #
-# par -q -n # -l logfile -c command -x -d
+# rancid_par -q -n # -l logfile -c command -x -d
 #   -q = quiet mode (don't log anything to the logfiles)
 #   -n # = number of processes to run at once (default = 3)
 #   -l logfile = logfile to store par logging into (.0-.n)
@@ -56,7 +56,7 @@
 #                This precludes passing different args to each process.
 #   -e = exec args split by spaces rather than use sh -c
 #
-# par takes a list of items to run a command on.  If the list entry begins
+# rancid_par takes a list of items to run a command on.  If the list entry begins
 # with a ":" the remainder of the line is the command to run ("{}" will be
 # replaced with each subsequent item in the list.  If the list entry begins
 # with a "#", the entry is ignored.  If a command is defined (either with
--- a/man/par.1
+++ b/man/par.1
@@ -1,10 +1,10 @@
 .\"
 .hys 50
-.TH "par" "1" "18 December 2007"
+.TH "rancid_par" "1" "18 December 2007"
 .SH NAME
-par \- parallel command processing
+rancid_par \- parallel command processing
 .SH SYNOPSIS
-.B par
+.B rancid_par
 [\fB\-dfiqx\fP]
 [\c
 .BI \-c\ 
@@ -18,7 +18,7 @@
 file
 [file...]
 .SH DESCRIPTION
-.B par
+.B rancid_par
 takes a list of files to run a command on.  The first line of each file begins
 with a colon (:) or a pound-sign (#).  If a colon, the remainder of the
 line is a command to run for each of the subsequent lines.  If a pound-sign,
@@ -43,10 +43,10 @@
 	c
 .sp
 run with
-.B par
+.B rancid_par
 like so:
 .sp
-	%par -q inputfile
+	%rancid_par -q inputfile
 .sp
 will produce the following output (order will vary):
 .sp
@@ -81,7 +81,7 @@
 .TP
 .B \-l
 Prefix of logfile name, as in prefix.N where N is the
-.B par
+.B rancid_par
 process number ([0..]).
 .sp
 Default: par.log.<time>.[0..]
@@ -104,7 +104,7 @@
 .\"
 .TP
 .B \-x
-View par logs in real-time via an 
+View rancid_par logs in real-time via an
 .BR xterm (1).
 .El
 .SH FILES
@@ -113,7 +113,7 @@
 .\" set tabstop to longest possible filename, plus a wee bit
 .ta \w'par.log.1006028679.00  'u
 \fIpar.log.T.N\fR Log file; where T is the current time in seconds since the
-epoch and N is the par process number ([0..]).
+epoch and N is the rancid_par process number ([0..]).
 .\"
 .\" .SH "SEE ALSO"
 .\" .BR expect (1)
--- a/man/rancid.conf.5.in
+++ b/man/rancid.conf.5.in
@@ -184,7 +184,7 @@
 .TP
 .B PAR_COUNT
 Defines the number of rancid processes that
-.IR par (1)
+.IR rancid_par (1)
 will start simultaneously as
 .IR control_rancid (1)
 attempts to perform collections.  Raising this value will decrease the amount
